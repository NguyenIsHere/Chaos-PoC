apiVersion: v1
kind: Secret
metadata:
  name: mongo-credentials
  namespace: kafka
type: Opaque
data:
  mongo-username: MjI1MjA5ODg= # base64 của "22520988"
  mongo-password: MjI1MjA5ODg= # base64 của "22520988"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-service
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: inventory-service
  template:
    metadata:
      labels:
        app: inventory-service
    spec:
      containers:
      - name: inventory-service
        image: inventory-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3001
        env:
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-credentials
              key: mongo-username
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-credentials
              key: mongo-password
        - name: MONGO_URI
          value: "mongodb+srv://$(MONGO_USERNAME):$(MONGO_PASSWORD)@cluster0.zeztdiz.mongodb.net/chaos-poc-inventory-db?retryWrites=true&w=majority&appName=Cluster0"
        - name: KAFKA_BROKERS
          value: "my-kafka:9092"
        - name: KAFKAJS_NO_PARTITIONER_WARNING
          value: "1"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 15
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: inventory-service
  namespace: kafka
spec:
  selector:
    app: inventory-service
  ports:
  - port: 3001
    targetPort: 3001
    nodePort: 30002  # Thêm nodePort để truy cập endpoint /products
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
      - name: order-service
        image: order-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        env:
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-credentials
              key: mongo-username
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-credentials
              key: mongo-password
        - name: MONGO_URI
          value: "mongodb+srv://$(MONGO_USERNAME):$(MONGO_PASSWORD)@cluster0.zeztdiz.mongodb.net/chaos-poc-order-db?retryWrites=true&w=majority&appName=Cluster0"
        - name: KAFKA_BROKERS
          value: "my-kafka:9092"
        - name: KAFKAJS_NO_PARTITIONER_WARNING
          value: "1"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
  namespace: kafka
spec:
  selector:
    app: order-service
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 30001
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-service
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payment-service
  template:
    metadata:
      labels:
        app: payment-service
    spec:
      containers:
      - name: payment-service
        image: payment-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3002
        env:
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-credentials
              key: mongo-username
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-credentials
              key: mongo-password
        - name: MONGO_URI
          value: "mongodb+srv://$(MONGO_USERNAME):$(MONGO_PASSWORD)@cluster0.zeztdiz.mongodb.net/chaos-poc-payment-db?retryWrites=true&w=majority&appName=Cluster0"
        - name: KAFKA_BROKERS
          value: "my-kafka:9092"
        - name: KAFKAJS_NO_PARTITIONER_WARNING
          value: "1"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 15
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: payment-service
  namespace: kafka
spec:
  selector:
    app: payment-service
  ports:
  - port: 3002
    targetPort: 3002