apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-ui-config
  namespace: kafka
data:
  application.yml: |
    server:
      port: 8080
    kafka:
      clusters:
        - name: local
          bootstrapServers: kafka-service:9092
          zookeeper: zookeeper-service:2181
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-ui-service
  namespace: kafka
spec:
  selector:
    app: kafka-ui
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
      nodePort: 30080  
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-ui
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-ui
  template:
    metadata:
      labels:
        app: kafka-ui
    spec:
      containers:
        - name: kafka-ui
          image: provectuslabs/kafka-ui
          ports:
            - containerPort: 8080
          env:
            - name: KAFKA_CLUSTERS_0_NAME
              value: local
            - name: KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
              value: kafka-service:9092
            - name: KAFKA_CLUSTERS_0_ZOOKEEPER
              value: zookeeper-service:2181
            - name: KAFKA_CLUSTERS_0_METRICS_PORT
              value: "9308"
            - name: SERVER_SERVLET_CONTEXT_PATH
              value: "/"
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 20
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 40
            timeoutSeconds: 5
          resources:
            limits:
              cpu: "200m"  
              memory: "256Mi"  
            requests:
              cpu: "100m"
              memory: "128Mi"