apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  namespace: kafka
  labels:
    app: kafka
spec:
  ports:
  - port: 9092
    name: kafka-port
  selector:
    app: kafka
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-headless
  namespace: kafka
  labels:
    app: kafka
spec:
  ports:
  - port: 9092
    name: kafka
  clusterIP: None
  selector:
    app: kafka
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
  namespace: kafka
data:
  init.sh: |
    #!/bin/bash
    set -ex
    mkdir -p /data/kafka
    chown -R 1000:1000 /data/kafka
    
    # Xử lý Cluster ID
    if [ -f /data/kafka/meta.properties ]; then
      echo "Phát hiện meta.properties cũ - xóa để tránh lỗi Cluster ID"
      rm -f /data/kafka/meta.properties
    fi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: kafka
  labels:
    app: kafka
spec:
  serviceName: kafka-headless
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kafka
    spec:
      initContainers:
      - name: init-config
        image: busybox
        command: ['/bin/sh', '-c', 'sh /config-map/init.sh']
        volumeMounts:
        - name: config-map
          mountPath: /config-map
        - name: data
          mountPath: /data
      containers:
      - name: kafka
        image: wurstmeister/kafka
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9092
          name: kafka
        env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper-service:2181
        - name: KAFKA_LISTENERS
          value: PLAINTEXT://:9092
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://kafka-service:9092
        - name: KAFKA_LOG_DIRS
          value: "/data/kafka"
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        - name: KAFKA_DEFAULT_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_NUM_PARTITIONS
          value: "1"
        - name: KAFKA_LOG_RETENTION_HOURS
          value: "168"
        - name: JMX_PORT
          value: "9999"
        - name: KAFKA_DELETE_TOPIC_ENABLE
          value: "true"
        volumeMounts:
        - name: data
          mountPath: /data
        readinessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 15
          timeoutSeconds: 5
        livenessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 30
          timeoutSeconds: 5
        resources:  # Thêm cấu hình tài nguyên
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "300m"  # Giảm từ 500m xuống 300m
      volumes:
      - name: config-map
        configMap:
          name: kafka-config
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi