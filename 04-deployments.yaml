apiVersion: v1
kind: Secret
metadata:
  name: mongo-credentials
  namespace: kafka
type: Opaque
data:
  mongo-username: MjI1MjA5ODg= # base64 của "22520988"
  mongo-password: MjI1MjA5ODg= # base64 của "22520988"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-service
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: inventory-service
  template:
    metadata:
      labels:
        app: inventory-service
    spec:
      containers:
      - name: inventory-service
        image: inventory-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3001
        env:
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-credentials
              key: mongo-username
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-credentials
              key: mongo-password
        - name: MONGO_URI
          value: "mongodb+srv://$(MONGO_USERNAME):$(MONGO_PASSWORD)@cluster0.zeztdiz.mongodb.net/chaos-poc-inventory-db?retryWrites=true&w=majority&appName=Cluster0"
        - name: KAFKA_BROKERS
          value: "kafka-service.kafka.svc.cluster.local:9092"
        - name: KAFKAJS_NO_PARTITIONER_WARNING
          value: "1"
        - name: KAFKA_CONNECTION_TIMEOUT
          value: "10000"
        - name: KAFKA_RETRY_ATTEMPTS
          value: "10"
        - name: KAFKA_RETRY_INTERVAL
          value: "5000"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "350m"  # Giảm từ 500m xuống 350m
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 15
          failureThreshold: 3
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 3
          timeoutSeconds: 3
        startupProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 15
          periodSeconds: 5
          failureThreshold: 12
          timeoutSeconds: 3
      initContainers:
      - name: wait-for-kafka
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z kafka-service.kafka.svc.cluster.local 9092; do echo waiting for kafka; sleep 5; done;']
---
apiVersion: v1
kind: Service
metadata:
  name: inventory-service
  namespace: kafka
spec:
  selector:
    app: inventory-service
  ports:
  - port: 3001
    targetPort: 3001
    nodePort: 30002
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
   ව: 1.0
    spec:
      containers:
      - name: order-service
        image: order-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        env:
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-credentials
              key: mongo-username
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-credentials
              key: mongo-password
        - name: MONGO_URI
          value: "mongodb+srv://$(MONGO_USERNAME):$(MONGO_PASSWORD)@cluster0.zeztdiz.mongodb.net/chaos-poc-order-db?retryWrites=true&w=majority&appName=Cluster0"
        - name: KAFKA_BROKERS
          value: "kafka-service.kafka.svc.cluster.local:9092"
        - name: KAFKAJS_NO_PARTITIONER_WARNING
          value: "1"
        - name: KAFKA_CONNECTION_TIMEOUT
          value: "10000"
        - name: KAFKA_RETRY_ATTEMPTS
          value: "10"
        - name: KAFKA_RETRY_INTERVAL
          value: "5000"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "350m"  # Giảm từ 500m xuống 350m
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 15
          failureThreshold: 3
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 3
          timeoutSeconds: 3
        startupProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 5
          failureThreshold: 12
          timeoutSeconds: 3
      initContainers:
      - name: wait-for-kafka
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z kafka-service.kafka.svc.cluster.local 9092; do echo waiting for kafka; sleep 5; done;']
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
  namespace: kafka
spec:
  selector:
    app: order-service
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 30001
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-service
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payment-service
  template:
    metadata:
      labels:
        app: payment-service
    spec:
      containers:
      - name: payment-service
        image: payment-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3002
        env:
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-credentials
              key: mongo-username
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-credentials
              key: mongo-password
        - name: MONGO_URI
          value: "mongodb+srv://$(MONGO_USERNAME):$(MONGO_PASSWORD)@cluster0.zeztdiz.mongodb.net/chaos-poc-payment-db?retryWrites=true&w=majority&appName=Cluster0"
        - name: KAFKA_BROKERS
          value: "kafka-service.kafka.svc.cluster.local:9092"
        - name: KAFKAJS_NO_PARTITIONER_WARNING
          value: "1"
        - name: KAFKA_CONNECTION_TIMEOUT
          value: "10000"
        - name: KAFKA_RETRY_ATTEMPTS
          value: "10"
        - name: KAFKA_RETRY_INTERVAL
          value: "5000"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "350m"  # Giảm từ 500m xuống 350m
        livenessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 30
          periodSeconds: 15
          failureThreshold: 3
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 3
          timeoutSeconds: 3
        startupProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 15
          periodSeconds: 5
          failureThreshold: 12
          timeoutSeconds: 3
      initContainers:
      - name: wait-for-kafka
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z kafka-service.kafka.svc.cluster.local 9092; do echo waiting for kafka; sleep 5; done;']
---
apiVersion: v1
kind: Service
metadata:
  name: payment-service
  namespace: kafka
spec:
  selector:
    app: payment-service
  ports:
  - port: 3002
    targetPort: 3002
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: service-restart-hooks
  namespace: kafka
data:
  on-kafka-ready.sh: |
    #!/bin/sh
    echo "Kafka is ready, triggering services restart..."
    kubectl rollout restart deployment/inventory-service -n kafka
    kubectl rollout restart deployment/order-service -n kafka
    kubectl rollout restart deployment/payment-service -n kafka